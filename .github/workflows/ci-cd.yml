# .github/workflows/ci-cd.yml
name: CI/CD Pipeline
on:
  push:
    branches: [ main, master ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    # ДОБАВЛЯЕМ чекаут кода для доступа к docker-compose.yml
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create directory if it doesn't exist
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          mkdir -p ./appointments_web_app
          
    - name: Copy docker-compose.yml
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        source: "docker-compose.yml, Dockerfile, services.json"
        target: "appointments_web_app/"
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ./appointments_web_app
          cat > .env << EOF
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          WEBAPP_URL=${{ secrets.WEBAPP_URL }}
          API_URL=${{ secrets.API_URL }}
          token=${{ secrets.TG_TOKEN }}
          admin_id=${{ secrets.ADMIN_ID }}
          work_hours=${{ secrets.WORK_HOURS }}
          reminder_time=${{ vars.REMINDER_TIME}}
          CLEANUP_INTERVAL=${{ vars.CLEANUP_INTERVAL}}
          service_types=${{ vars.SERVICE_TYPES}}
          service_names=${{ vars.SERVICE_NAMES}}
          status_emoji=${{ vars.STATUS_EMOJI}}
          appointments_list_length=${{ vars.APPOINTMENTS_LIST_LENGTH}}
          EOF
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker compose pull
          docker compose up -d --force-recreate
          docker compose ps
          docker image prune -f
