version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nail_salon_postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PYTHONPATH: /app
    ports:
      - "127.0.0.1:5432:5432"  # Bind только к localhost
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./backups:/backups
    networks:
      - nail_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  api:
    image: ghcr.io/rasta341/appointments_web_app:latest
    container_name: nail_salon_api
    restart: always
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - API_HOST=0.0.0.0
      - API_PORT=8088
      - ENVIRONMENT=production
      - PYTHONPATH=/app
    env_file:
      - .env
    ports:
      - "127.0.0.1:8088:8088"
    volumes:
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nail_network
    command: ["python", "api/api.py"]
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  bot:
    image: ghcr.io/rasta341/appointments_web_app:latest
    container_name: nail_salon_bot
    restart: always
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - API_URL=http://api:8088
      - ENVIRONMENT=production
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - api
      - postgres
    networks:
      - nail_network
    command: ["python", "bot/bot.py"]
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  postgres_data_prod:

networks:
  nail_network:
    driver: bridge